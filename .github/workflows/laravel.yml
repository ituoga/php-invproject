name: Laravel

on:
  release:
    types: [published]

  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

  pull_request:
    branches:
      - '**'

jobs:
  laravel-tests:
    name: Laravel Tests

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
    - name: Prepare Laravel Application
      run: |
        cp .env.ci .env
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test 

  notify:
    name: Send notification to Matrix Channel
    if: always()
    runs-on: ubuntu-latest
    needs: [laravel-tests, phpstan, docker_publish]
    steps:
      - uses: Cadair/matrix-notify-action@main
        id: message
        with:
          matrix_token: ${{ secrets.matrix_access_token }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          homeserver: ${{ vars.matrix_homeserver }}
          roomid: ${{ vars.matrix_roomid }}

      - name: Print the event ID
        run: echo "Sent Matrix Event '${{ steps.message.outputs.eventId }}'"

  phpstan:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
 
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
 
      - name: Install composer dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
 
      - name: Run Static Analysis
        run: ./vendor/bin/phpstan --error-format=github        
        
  docker_publish:
    name: Docker Publish
    if: github.event_name == 'release' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: "ubuntu-latest"
    needs: [laravel-tests, phpstan]
    
    steps:
      - uses: actions/checkout@v4

      - name: Set Docker Image Tags
        id: docker_meta
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "VERSION_TAG=latest" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=$(echo "${GITHUB_REF}" | sed 's/refs\/tags\///')
            echo "VERSION_TAG=$VERSION" >> $GITHUB_ENV
          elif [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            VERSION=${GITHUB_REF##*/}
            echo "VERSION_TAG=$VERSION" >> $GITHUB_ENV
            echo "LATEST_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build and publish Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .docker/prod/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.VERSION_TAG }}
            ghcr.io/${{ github.repository }}:latest

     
